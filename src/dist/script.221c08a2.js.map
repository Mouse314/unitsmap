{"version":3,"sources":["engine/Geometry/geometry.ts","engine/Geometry/vector.ts","engine/Geometry/projection.ts","engine/Render/update.ts","engine/State/mapDrag.ts","engine/State/transform.ts","engine/InputEvents/mouse.ts","engine/InputEvents/mouseListener.ts","engine/Render/Figures/figure.ts","engine/Render/Figures/polygon.ts","engine/Render/Figures/rect.ts","engine/Render/objects.ts","engine/Render/ruler.ts","script.ts","../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"script.221c08a2.js","sourceRoot":"..","sourcesContent":["import Objects from \"../Render/objects\";\r\nimport Projection from \"./projection\";\r\n\r\nexport default class Geometry {\r\n    canvas : HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    proj: Projection;\r\n    objects: Objects;\r\n\r\n    constructor(canvas : HTMLCanvasElement, ctx : CanvasRenderingContext2D, proj : Projection, objects : any) {\r\n        this.canvas = canvas;\r\n        this.ctx = ctx;\r\n        this.proj = proj;\r\n        this.objects = objects;\r\n    }\r\n\r\n    public destruct() {\r\n        return [this.canvas, this.ctx, this.proj, this.objects];\r\n    }\r\n\r\n    public copy() {\r\n        return new Geometry(\r\n            this.canvas,\r\n            this.ctx,\r\n            this.proj.copy(),\r\n            this.objects\r\n        );\r\n    }\r\n}","export default class Vector {\r\n    x : number;\r\n    y : number;\r\n\r\n    public constructor(x : number, y : number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    public lenght() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    public distance(point : Vector) {\r\n        return Math.sqrt(Math.pow(this.x - point.x, 2) + Math.pow(this.y - point.y, 2));\r\n    }\r\n\r\n    public getOpposite() {\r\n        return new Vector(-this.x, -this.y);\r\n    }\r\n\r\n    public add(vector : Vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y);\r\n    }\r\n\r\n    public sub(vector : Vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y);\r\n    }\r\n\r\n    public mul(number : number) {\r\n        return new Vector(this.x * number, this.y * number);\r\n    }\r\n\r\n    public lerp(vector : Vector, t : number) {\r\n        return this.add(vector.sub(this).mul(t))\r\n    }\r\n\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n}","import Vector from \"./vector\";\r\n\r\nexport default class Projection {\r\n    centerPoint : Vector;\r\n    horizontalRange: number;\r\n    verticalRange: number;\r\n    canvas: HTMLCanvasElement;\r\n    backgroundSize : number;\r\n\r\n\r\n    constructor(centerPoint : Vector, horizontalRange : number, verticalRange : number, canvas : HTMLCanvasElement, backgroundSize : number) {\r\n\r\n        this.centerPoint = centerPoint;\r\n        this.horizontalRange = horizontalRange; \r\n        this.verticalRange = verticalRange;\r\n        this.canvas = canvas;\r\n        this.backgroundSize = backgroundSize;\r\n    }\r\n\r\n    public worldToScreenPoint(worldPoint : Vector) : Vector {\r\n        const x = (worldPoint.x - (this.centerPoint.x - this.horizontalRange / 2)) / this.horizontalRange * this.canvas.width;\r\n        const y = this.canvas.height - (worldPoint.y - (this.centerPoint.y - this.verticalRange / 2)) / this.verticalRange * this.canvas.height;\r\n        return new Vector(x, y);\r\n    }\r\n    \r\n    public screenToWorldPoint(screenPoint : Vector) : Vector {\r\n        const x = (screenPoint.x / this.canvas.width) * this.horizontalRange + this.centerPoint.x - this.horizontalRange / 2;\r\n        const y = (1 - screenPoint.y / this.canvas.height) * this.verticalRange + this.centerPoint.y - this.verticalRange / 2;\r\n        return new Vector(x, y);\r\n    }\r\n    \r\n    setBackgroundPos() : void {\r\n        this.canvas.style.backgroundSize = this.backgroundSize * 2 / this.horizontalRange + \"px\";\r\n    \r\n        const pictureCenter = this.worldToScreenPoint(new Vector(0, 0));\r\n    \r\n        this.canvas.style.backgroundPositionX = pictureCenter.x + \"px\";\r\n        this.canvas.style.backgroundPositionY = pictureCenter.y + \"px\";\r\n    }\r\n\r\n    public copy() : Projection {\r\n        return new Projection(\r\n            this.centerPoint.copy(),\r\n            this.horizontalRange,\r\n            this.verticalRange,\r\n            this.canvas,\r\n            this.backgroundSize\r\n        );\r\n    }\r\n}","import Geometry from \"../Geometry/geometry\";\r\nimport Ruler from \"./ruler\";\r\n\r\nexport default function update(geometry : Geometry, ruler : Ruler, isZooming : boolean = false) {\r\n    const {canvas, ctx, proj, objects} = geometry;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    objects.drawAll(ctx, proj);\r\n    if(isZooming) ruler.draw(isZooming);\r\n    else ruler.draw();\r\n}","import Geometry from \"../Geometry/geometry\";\r\nimport Mouse from \"../InputEvents/mouse\";\r\nimport Ruler from \"../Render/ruler\";\r\nimport update from \"../Render/update\";\r\n\r\nexport default function drag(geometry : Geometry, mouse : Mouse, ruler : Ruler) : void {\r\n    if (!mouse.isClicked) {\r\n        return;\r\n    }\r\n\r\n    const {canvas, ctx, proj, objects} = geometry;\r\n\r\n    // Перемещение карты\r\n    proj.centerPoint.x -= mouse.deltaX / canvas.width * proj.horizontalRange;\r\n    proj.centerPoint.y += mouse.deltaY / canvas.height * proj.verticalRange;\r\n\r\n    proj.setBackgroundPos();\r\n    update(geometry, ruler);\r\n}","import Geometry from \"../Geometry/geometry\";\r\nimport Ruler from \"../Render/ruler\";\r\nimport update from \"../Render/update\";\r\n\r\nexport default class TransformGeometry {\r\n    startTime : number | null;\r\n    duration : number;\r\n    oldGeometry : Geometry | null;\r\n    newGeometry : Geometry | null;\r\n    ruler : Ruler | null;\r\n    currentGeometry : Geometry | null;\r\n    isAnimating : boolean;\r\n\r\n    constructor(duration : number, ruler : Ruler) {\r\n        this.startTime = null;\r\n        this.duration = duration;\r\n        this.oldGeometry = null;\r\n        this.newGeometry = null;\r\n        this.ruler = ruler;\r\n        this.currentGeometry = null;\r\n\r\n        this.isAnimating = false;\r\n    }\r\n\r\n    public animate(oldGeometry : Geometry, newGeometry : Geometry) : void {\r\n        if (this.isAnimating) {\r\n            // this.oldGeometry = oldGeometry;\r\n            this.newGeometry = newGeometry;\r\n            // this.startTime = null;\r\n        }\r\n        else {\r\n            this.oldGeometry = oldGeometry;\r\n            this.newGeometry = newGeometry;\r\n            this.currentGeometry = oldGeometry.copy();\r\n            this.isAnimating = true;\r\n            requestAnimationFrame(this.animateGeometry.bind(this));\r\n        }\r\n    }\r\n\r\n    animateGeometry(currentTime : number) {\r\n        if (!this.startTime) this.startTime = currentTime;\r\n        const elapsedTime = currentTime - this.startTime;\r\n        const progress = Math.min(elapsedTime / this.duration, 1); // t ∈ [0, 1]\r\n\r\n        // Линейная интерполяция (LERP)\r\n        const deltaTime = progress;\r\n\r\n        if (this.currentGeometry && this.oldGeometry && this.newGeometry) {\r\n            this.currentGeometry.proj.centerPoint = this.oldGeometry.proj.centerPoint.lerp(this.newGeometry.proj.centerPoint, deltaTime);\r\n            this.currentGeometry.proj.horizontalRange = this.lerp(this.oldGeometry.proj.horizontalRange, this.newGeometry.proj.horizontalRange, deltaTime);\r\n            this.currentGeometry.proj.verticalRange = this.lerp(this.oldGeometry.proj.verticalRange, this.newGeometry.proj.verticalRange, deltaTime);\r\n        }\r\n\r\n        if (this.currentGeometry && this.ruler) {\r\n            this.ruler.geometry = this.currentGeometry;\r\n        }\r\n\r\n        // Делаем дела\r\n        if (this.currentGeometry && this.ruler) {\r\n            update(this.currentGeometry, this.ruler, true);\r\n        }\r\n\r\n        if (progress < 1) {\r\n            requestAnimationFrame(this.animateGeometry.bind(this));\r\n        } else {\r\n            console.log('Анимация завершена!');\r\n            this.isAnimating = false;\r\n            this.startTime = null;\r\n            return this.newGeometry;\r\n        }\r\n    }\r\n\r\n    public lerp(start : number, end : number, t : number) : number {\r\n        return start + (end - start) * t;\r\n    }\r\n}","export default class Mouse {\r\n    x : number;\r\n    y : number;\r\n    prevX : number;\r\n    prevY : number;\r\n    deltaX : number;\r\n    deltaY : number;\r\n    isClicked : boolean;\r\n\r\n    constructor() {\r\n        this.x = -1;\r\n        this.y = -1;\r\n        this.prevX = -1;\r\n        this.prevY = -1;\r\n        this.deltaX = 0;\r\n        this.deltaY = 0;\r\n        this.isClicked = false;\r\n    }\r\n\r\n    public updatePosition(x : number, y : number) : void {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        if (this.isClicked) {\r\n            this.deltaX = x - this.prevX;\r\n            this.deltaY = y - this.prevY;\r\n        }\r\n\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n    }\r\n\r\n    public updateDelta(deltaX : number, deltaY : number) : void {\r\n        this.deltaX = deltaX;\r\n        this.deltaY = deltaY;\r\n    }\r\n\r\n    public update(x : number, y : number, deltaX : number, deltaY : number) : void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.deltaX = deltaX;\r\n        this.deltaY = deltaY;\r\n    }\r\n    \r\n    public setClicked(state : boolean) : void {\r\n        this.isClicked = state;\r\n    }\r\n}","import Geometry from \"../Geometry/geometry\";\r\nimport Vector from \"../Geometry/vector\";\r\nimport Ruler from \"../Render/ruler\";\r\nimport update from \"../Render/update\";\r\nimport drag from \"../State/mapDrag\";\r\nimport TransformGeometry from \"../State/transform\";\r\nimport Mouse from \"./mouse\";\r\n\r\nexport default function addMouseListeners(geometry : Geometry, ruler : Ruler) {\r\n    const {canvas, ctx, proj, objects} = geometry;\r\n\r\n    const mouse = new Mouse();\r\n    const transform = new TransformGeometry(100, ruler);\r\n\r\n    canvas.addEventListener(\"mousedown\", (e : MouseEvent) => {\r\n        mouse.updatePosition(e.offsetX, e.offsetY);\r\n\r\n        mouse.setClicked(true);\r\n    });\r\n\r\n    canvas.addEventListener(\"mousemove\", (e : MouseEvent) => {\r\n        mouse.updatePosition(e.offsetX, e.offsetY);\r\n\r\n        // Перетаскивание карты\r\n        drag(geometry, mouse, ruler);\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseup\", (e : MouseEvent) => {\r\n        mouse.setClicked(false);\r\n    });\r\n\r\n    // Зуммирование\r\n    const zoomIntencity = 0.1;\r\n    canvas.addEventListener(\"wheel\",  (e : WheelEvent) => {\r\n        e.preventDefault();\r\n\r\n        const cursorWorld = proj.screenToWorldPoint(new Vector(e.offsetX, e.offsetY));\r\n\r\n        let deltaX = (cursorWorld.x - proj.centerPoint.x) * zoomIntencity;\r\n        let deltaY = (cursorWorld.y - proj.centerPoint.y) * zoomIntencity;\r\n\r\n        const newGeometry = geometry.copy();\r\n\r\n        if (e.deltaY < 0){\r\n            // Вниз\r\n            newGeometry.proj.horizontalRange -= proj.horizontalRange * zoomIntencity;\r\n            newGeometry.proj.verticalRange -= proj.verticalRange * zoomIntencity;\r\n            newGeometry.proj.centerPoint.x += deltaX;\r\n            newGeometry.proj.centerPoint.y += deltaY;\r\n\r\n        } else {\r\n            // Вверх\r\n            newGeometry.proj.horizontalRange += proj.horizontalRange * zoomIntencity;\r\n            newGeometry.proj.verticalRange += proj.verticalRange * zoomIntencity;\r\n            newGeometry.proj.centerPoint.x -= deltaX;\r\n            newGeometry.proj.centerPoint.y -= deltaY;\r\n        }\r\n\r\n        transform.animate(geometry, newGeometry);\r\n\r\n        geometry = newGeometry;\r\n        ruler.geometry = newGeometry;\r\n\r\n        proj.setBackgroundPos();\r\n        update(geometry, ruler);\r\n    });\r\n}","import Projection from \"../../Geometry/projection\";\r\nimport Vector from \"../../Geometry/vector\";\r\n\r\nexport default class Figure {\r\n    public center : Vector;\r\n\r\n    constructor(center : Vector) {\r\n        this.center = center;\r\n    }\r\n\r\n    public draw(ctx : CanvasRenderingContext2D, proj : Projection) {\r\n        throw new Error(\"Метод не реализован в подклассах\");\r\n    }\r\n}","import Projection from \"../../Geometry/projection\";\r\nimport Vector from \"../../Geometry/vector\";\r\nimport Figure from \"./figure\";\r\n\r\nexport default class Polygon extends Figure {\r\n    vertices : Array<Vector>;\r\n    borderColor : string;\r\n    borderWidth : number;\r\n    fillColor : string;\r\n\r\n    constructor (vertices : Array<Vector>, borderColor : string, borderWidth : number, fillColor : string) {\r\n        super(new Vector(1, 1));\r\n        this.vertices = vertices;\r\n        this.borderColor = borderColor;\r\n        this.borderWidth = borderWidth;\r\n        this.fillColor = fillColor;\r\n    }\r\n\r\n    draw (ctx : CanvasRenderingContext2D, proj : Projection) {\r\n        if (this.vertices.length == 0) return null; \r\n\r\n        ctx.beginPath();\r\n\r\n        const screenPoint = proj.worldToScreenPoint(this.vertices[0]);\r\n        ctx.moveTo(screenPoint.x, screenPoint.y);\r\n\r\n        this.vertices.forEach((vertex, ind) => {\r\n            const screenPoint = proj.worldToScreenPoint(vertex);\r\n            ctx.lineTo(screenPoint.x, screenPoint.y);\r\n        });\r\n\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = this.borderColor;\r\n        ctx.lineWidth = this.borderWidth;\r\n        ctx.stroke();\r\n    }\r\n}","import Projection from \"../../Geometry/projection\";\r\nimport Vector from \"../../Geometry/vector\";\r\nimport Figure from \"./figure\";\r\n\r\nexport default class Rect extends Figure {\r\n    width : number;\r\n    height : number;\r\n    borderColor : string;\r\n    borderWidth : number;\r\n    fillColor : string;\r\n\r\n    constructor (centerWorld : Vector, width : number, height : number, borderColor : string, borderWidth : number, fillColor : string) {\r\n        super(centerWorld);\r\n        this.width = width;\r\n        this.height = height;\r\n        this.borderColor = borderColor;\r\n        this.borderWidth = borderWidth;\r\n        this.fillColor = fillColor;\r\n    }\r\n\r\n    draw (ctx : CanvasRenderingContext2D, proj : Projection) {\r\n        const startWorldPoint = new Vector(this.center.x - this.width / 2, this.center.y - this.height / 2);\r\n\r\n        const screenPointStart = proj.worldToScreenPoint(startWorldPoint);\r\n        const screenPoint1 = proj.worldToScreenPoint(startWorldPoint.add(new Vector(this.width, 0)));\r\n        const screenPoint2 = proj.worldToScreenPoint(startWorldPoint.add(new Vector(this.width, -this.height)));\r\n        const screenPoint3 = proj.worldToScreenPoint(startWorldPoint.sub(new Vector(0, this.height)));\r\n\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.strokeStyle = this.borderColor;\r\n        ctx.lineWidth = this.borderWidth;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(screenPointStart.x, screenPointStart.y);\r\n        ctx.lineTo(screenPoint1.x, screenPoint1.y);\r\n        ctx.lineTo(screenPoint2.x, screenPoint2.y);\r\n        ctx.lineTo(screenPoint3.x, screenPoint3.y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n}","import Projection from \"../Geometry/projection\";\r\nimport Figure from \"./Figures/figure\";\r\n\r\nexport default class Objects {\r\n    figures : Array<Figure>;\r\n\r\n    constructor() {\r\n        this.figures = [];\r\n    }\r\n\r\n    addFigures(figures : Array<Figure>) {\r\n        this.figures = [...this.figures, ...figures];\r\n    }\r\n\r\n    drawAll(ctx : CanvasRenderingContext2D, proj : Projection) {\r\n        this.figures.forEach(figure => {\r\n            figure.draw(ctx, proj);\r\n        });\r\n    }\r\n}","import Geometry from \"../Geometry/geometry\";\r\nimport Vector from \"../Geometry/vector\";\r\n\r\nexport default class Ruler {\r\n    geometry : Geometry;\r\n    pointsAmount : number;\r\n    power: number;\r\n    aspect : number;\r\n    verticalPoints : Array<Vector>;\r\n    horizontalPoints : Array<Vector>;\r\n\r\n    constructor(geometry : Geometry, pointsAmount : number) {\r\n        this.geometry = geometry;\r\n        this.pointsAmount = pointsAmount;\r\n        this.power = 0;\r\n        this.aspect = 0;\r\n        this.verticalPoints = [];\r\n        this.horizontalPoints = [];\r\n        this.recalculateAspect(pointsAmount);\r\n    }\r\n\r\n    public draw(isZooming = false) : void {\r\n        const {canvas, ctx, proj, objects} = this.geometry;\r\n\r\n        if (isZooming) {\r\n            this.recalculateAspect(this.pointsAmount);\r\n        }\r\n\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.lineWidth = 3;\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(0, canvas.height);\r\n        ctx.lineTo(canvas.width, canvas.height);\r\n        ctx.stroke();\r\n\r\n        ctx.font = \"20px Arial\";\r\n\r\n        ctx.fillText(\"0\", 15, canvas.height - 15)\r\n\r\n        for (let i = this.pointsAmount; i >= 1; i--) {\r\n            // Вертикальные\r\n            ctx.moveTo(0, this.verticalPoints[i - 1].y);\r\n            ctx.lineTo(10, this.verticalPoints[i - 1].y);\r\n            ctx.stroke();\r\n            ctx.fillText((this.aspect * i).toFixed(Math.max(this.power, 0)), 15, this.verticalPoints[i - 1].y);\r\n\r\n            // Горизонтальные\r\n            ctx.moveTo(this.horizontalPoints[i - 1].x, canvas.height);\r\n            ctx.lineTo(this.horizontalPoints[i - 1].x, canvas.height - 10);\r\n            ctx.stroke();\r\n            ctx.fillText((this.aspect * i).toFixed(Math.max(this.power, 0)), this.horizontalPoints[i - 1].x, canvas.height - 15);\r\n        }\r\n    }\r\n\r\n    public recalculateAspect(pointsAmount : number) {\r\n        const {canvas, ctx, proj, objects} = this.geometry;\r\n\r\n        const cornerPoint = proj.screenToWorldPoint(new Vector(0, canvas.height));\r\n\r\n        const probeX = cornerPoint.add(new Vector(1, 0));\r\n        const linePointX = proj.worldToScreenPoint(probeX);\r\n        const power = Math.ceil(Math.log((linePointX.x - cornerPoint.x) / canvas.width) / Math.LN10);\r\n        const aspect = Math.pow(10, -power);\r\n\r\n        this.power = power;\r\n        this.aspect = aspect;\r\n\r\n        this.verticalPoints = [];\r\n        this.horizontalPoints = [];\r\n\r\n        for (let i = 1; i < pointsAmount + 1; i++) {\r\n            this.verticalPoints.push(proj.worldToScreenPoint(cornerPoint.add(new Vector(0, aspect * i))));\r\n            this.horizontalPoints.push(proj.worldToScreenPoint(cornerPoint.add(new Vector(aspect * i, 0))));\r\n        }\r\n    }\r\n\r\n    public drawLineLenght(line : Array<Vector>) : void {\r\n        const dx = line[0].x - line[1].x;\r\n        const dy = line[0].y - line[1].y;\r\n\r\n        const length = Math.sqrt(dx * dx - dy * dy);\r\n\r\n        const screenPoint = this.geometry.proj.worldToScreenPoint(line[1]).add(new Vector(15, 15));\r\n\r\n        this.geometry.ctx.font = \"15px Arial\";\r\n        this.geometry.ctx.fillText(`Длина сегмента: ${length.toFixed(2)}`, screenPoint.x, screenPoint.y);\r\n    }\r\n}","import Geometry from \"./engine/Geometry/geometry\";\r\nimport Projection from \"./engine/Geometry/projection\";\r\nimport Vector from \"./engine/Geometry/vector\";\r\nimport addMouseListeners from \"./engine/InputEvents/mouseListener\";\r\nimport Polygon from \"./engine/Render/Figures/polygon\";\r\nimport Rect from \"./engine/Render/Figures/rect\";\r\nimport Objects from \"./engine/Render/objects\";\r\nimport Ruler from \"./engine/Render/ruler\";\r\nimport update from \"./engine/Render/update\";\r\n\r\nconst canvas = document.getElementById('drawingField') as HTMLCanvasElement;\r\nconst ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\nconst container = canvas.parentElement as Element;\r\nconst objects = new Objects();\r\n\r\nconst figures = [\r\n    new Rect(new Vector(.1, .2), .1, .1, \"pink\", 2, \"blue\"),\r\n    new Rect(new Vector(.3, .4), .1, .1, \"green\", 1, \"red\"),\r\n    new Polygon([new Vector(.2, .2),\r\n                 new Vector(.2, .3),\r\n                 new Vector(.3, .4),], \"rose\", 3, \"magenta\"),\r\n];\r\n\r\nobjects.addFigures(figures);\r\n\r\nfunction resizeCanvas() {\r\n    const computedStyle = getComputedStyle(container);\r\n    const width = parseInt(computedStyle.width, 10);\r\n    const height = parseInt(computedStyle.height, 10);\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n}\r\n\r\nresizeCanvas();\r\n\r\nconst center = new Vector(0, 0);\r\nconst screen_ratio = canvas.height / canvas.width;\r\nconst horizontalRange = 2;\r\nconst verticalRange = horizontalRange * screen_ratio;\r\nconst backgroundSize = 2000;\r\n\r\nconst projection = new Projection(center, horizontalRange, verticalRange, canvas, backgroundSize);\r\n\r\nconst appGeometry = new Geometry(canvas, ctx, projection, objects);\r\n\r\nconst ruler = new Ruler(appGeometry, 10);\r\n\r\nwindow.addEventListener('resize', resizeCanvas);\r\n\r\nupdate(appGeometry, ruler);\r\n\r\naddMouseListeners(appGeometry, ruler);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}